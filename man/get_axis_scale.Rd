% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_axis_scale.R
\name{get_axis_scale}
\alias{get_axis_scale}
\title{Get y-axis scaling function and parameter}
\usage{
get_axis_scale(d)
}
\arguments{
\item{d}{An observation (i.e., a row) from a dataframe obtained using MetaExtractR::join_irf_json().}
}
\value{
The function creates a list including a function object called "axis_scaling_function()" and a parameter called "scaling_parameter" representing 
the y-axis scaling. The axis_scaling_function() function can then be used in the transformation function.

#' @examples
# Examples 
# Example 1: General transformation
# Example 2: Specific transformation for current dep
# Example 3: General transformation including current dep and specific transformation for one other "dep"
axis_trans <- "y*100 log_q_cpi_y/20"
d <- data.frame(
  dep = dep,
  axis_trans = axis_trans
)
get_axis_scale(d)
# Example 4: General transformation excluding current dep and specific transformation for current dep
}
\description{
Using another helper function (parse_axis_scale_string()), this helper function 
extracts the y-axis scaling value from an observation (i.e., a row) in a 
dataframe obtained using MetaExtractR::join_irf_json() and returns a function 
that can be used to apply the axis scaling to the IRF data (mean effect and 
confidence bounds). The aim is to transform the axis for any variable into percent (if not already the case).
}
